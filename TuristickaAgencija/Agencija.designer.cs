#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TuristickaAgencija
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Agencija")]
	public partial class AgencijaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHotel(Hotel instance);
    partial void UpdateHotel(Hotel instance);
    partial void DeleteHotel(Hotel instance);
    partial void InsertStavkaRacuna(StavkaRacuna instance);
    partial void UpdateStavkaRacuna(StavkaRacuna instance);
    partial void DeleteStavkaRacuna(StavkaRacuna instance);
    partial void InsertMesto(Mesto instance);
    partial void UpdateMesto(Mesto instance);
    partial void DeleteMesto(Mesto instance);
    partial void InsertPutnik(Putnik instance);
    partial void UpdatePutnik(Putnik instance);
    partial void DeletePutnik(Putnik instance);
    partial void InsertRacun(Racun instance);
    partial void UpdateRacun(Racun instance);
    partial void DeleteRacun(Racun instance);
    partial void InsertRezervacija(Rezervacija instance);
    partial void UpdateRezervacija(Rezervacija instance);
    partial void DeleteRezervacija(Rezervacija instance);
    partial void InsertSoba(Soba instance);
    partial void UpdateSoba(Soba instance);
    partial void DeleteSoba(Soba instance);
    #endregion
		
		public AgencijaDataContext() : 
				base(global::TuristickaAgencija.Properties.Settings.Default.AgencijaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AgencijaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgencijaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgencijaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgencijaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Hotel> Hotels
		{
			get
			{
				return this.GetTable<Hotel>();
			}
		}
		
		public System.Data.Linq.Table<StavkaRacuna> StavkaRacunas
		{
			get
			{
				return this.GetTable<StavkaRacuna>();
			}
		}
		
		public System.Data.Linq.Table<Mesto> Mestos
		{
			get
			{
				return this.GetTable<Mesto>();
			}
		}
		
		public System.Data.Linq.Table<Putnik> Putniks
		{
			get
			{
				return this.GetTable<Putnik>();
			}
		}
		
		public System.Data.Linq.Table<Racun> Racuns
		{
			get
			{
				return this.GetTable<Racun>();
			}
		}
		
		public System.Data.Linq.Table<Rezervacija> Rezervacijas
		{
			get
			{
				return this.GetTable<Rezervacija>();
			}
		}
		
		public System.Data.Linq.Table<Soba> Sobas
		{
			get
			{
				return this.GetTable<Soba>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hotel")]
	public partial class Hotel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHotela;
		
		private string _nazivHotela;
		
		private string _kategorija;
		
		private int _brSoba;
		
		private System.Nullable<int> _IDMesta;
		
		private EntitySet<Rezervacija> _Rezervacijas;
		
		private EntitySet<Soba> _Sobas;
		
		private EntityRef<Mesto> _Mesto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHotelaChanging(int value);
    partial void OnIDHotelaChanged();
    partial void OnnazivHotelaChanging(string value);
    partial void OnnazivHotelaChanged();
    partial void OnkategorijaChanging(string value);
    partial void OnkategorijaChanged();
    partial void OnbrSobaChanging(int value);
    partial void OnbrSobaChanged();
    partial void OnIDMestaChanging(System.Nullable<int> value);
    partial void OnIDMestaChanged();
    #endregion
		
		public Hotel()
		{
			this._Rezervacijas = new EntitySet<Rezervacija>(new Action<Rezervacija>(this.attach_Rezervacijas), new Action<Rezervacija>(this.detach_Rezervacijas));
			this._Sobas = new EntitySet<Soba>(new Action<Soba>(this.attach_Sobas), new Action<Soba>(this.detach_Sobas));
			this._Mesto = default(EntityRef<Mesto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHotela", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHotela
		{
			get
			{
				return this._IDHotela;
			}
			set
			{
				if ((this._IDHotela != value))
				{
					this.OnIDHotelaChanging(value);
					this.SendPropertyChanging();
					this._IDHotela = value;
					this.SendPropertyChanged("IDHotela");
					this.OnIDHotelaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazivHotela", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nazivHotela
		{
			get
			{
				return this._nazivHotela;
			}
			set
			{
				if ((this._nazivHotela != value))
				{
					this.OnnazivHotelaChanging(value);
					this.SendPropertyChanging();
					this._nazivHotela = value;
					this.SendPropertyChanged("nazivHotela");
					this.OnnazivHotelaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kategorija", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string kategorija
		{
			get
			{
				return this._kategorija;
			}
			set
			{
				if ((this._kategorija != value))
				{
					this.OnkategorijaChanging(value);
					this.SendPropertyChanging();
					this._kategorija = value;
					this.SendPropertyChanged("kategorija");
					this.OnkategorijaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brSoba", DbType="Int NOT NULL")]
		public int brSoba
		{
			get
			{
				return this._brSoba;
			}
			set
			{
				if ((this._brSoba != value))
				{
					this.OnbrSobaChanging(value);
					this.SendPropertyChanging();
					this._brSoba = value;
					this.SendPropertyChanged("brSoba");
					this.OnbrSobaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMesta", DbType="Int")]
		public System.Nullable<int> IDMesta
		{
			get
			{
				return this._IDMesta;
			}
			set
			{
				if ((this._IDMesta != value))
				{
					if (this._Mesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMestaChanging(value);
					this.SendPropertyChanging();
					this._IDMesta = value;
					this.SendPropertyChanged("IDMesta");
					this.OnIDMestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Rezervacija", Storage="_Rezervacijas", ThisKey="IDHotela", OtherKey="IDHotela")]
		public EntitySet<Rezervacija> Rezervacijas
		{
			get
			{
				return this._Rezervacijas;
			}
			set
			{
				this._Rezervacijas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Soba", Storage="_Sobas", ThisKey="IDHotela", OtherKey="IDHotela")]
		public EntitySet<Soba> Sobas
		{
			get
			{
				return this._Sobas;
			}
			set
			{
				this._Sobas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mesto_Hotel", Storage="_Mesto", ThisKey="IDMesta", OtherKey="IDMesta", IsForeignKey=true)]
		public Mesto Mesto
		{
			get
			{
				return this._Mesto.Entity;
			}
			set
			{
				Mesto previousValue = this._Mesto.Entity;
				if (((previousValue != value) 
							|| (this._Mesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mesto.Entity = null;
						previousValue.Hotels.Remove(this);
					}
					this._Mesto.Entity = value;
					if ((value != null))
					{
						value.Hotels.Add(this);
						this._IDMesta = value.IDMesta;
					}
					else
					{
						this._IDMesta = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mesto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rezervacijas(Rezervacija entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_Rezervacijas(Rezervacija entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_Sobas(Soba entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_Sobas(Soba entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StavkaRacuna")]
	public partial class StavkaRacuna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStavke;
		
		private string _nazivStavke;
		
		private EntitySet<Racun> _Racuns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStavkeChanging(int value);
    partial void OnIDStavkeChanged();
    partial void OnnazivStavkeChanging(string value);
    partial void OnnazivStavkeChanged();
    #endregion
		
		public StavkaRacuna()
		{
			this._Racuns = new EntitySet<Racun>(new Action<Racun>(this.attach_Racuns), new Action<Racun>(this.detach_Racuns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStavke", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStavke
		{
			get
			{
				return this._IDStavke;
			}
			set
			{
				if ((this._IDStavke != value))
				{
					this.OnIDStavkeChanging(value);
					this.SendPropertyChanging();
					this._IDStavke = value;
					this.SendPropertyChanged("IDStavke");
					this.OnIDStavkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazivStavke", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nazivStavke
		{
			get
			{
				return this._nazivStavke;
			}
			set
			{
				if ((this._nazivStavke != value))
				{
					this.OnnazivStavkeChanging(value);
					this.SendPropertyChanging();
					this._nazivStavke = value;
					this.SendPropertyChanged("nazivStavke");
					this.OnnazivStavkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StavkaRacuna_Racun", Storage="_Racuns", ThisKey="IDStavke", OtherKey="IDStavke")]
		public EntitySet<Racun> Racuns
		{
			get
			{
				return this._Racuns;
			}
			set
			{
				this._Racuns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Racuns(Racun entity)
		{
			this.SendPropertyChanging();
			entity.StavkaRacuna = this;
		}
		
		private void detach_Racuns(Racun entity)
		{
			this.SendPropertyChanging();
			entity.StavkaRacuna = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mesto")]
	public partial class Mesto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMesta;
		
		private string _nazivMesta;
		
		private string _drzava;
		
		private string _region;
		
		private EntitySet<Hotel> _Hotels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMestaChanging(int value);
    partial void OnIDMestaChanged();
    partial void OnnazivMestaChanging(string value);
    partial void OnnazivMestaChanged();
    partial void OndrzavaChanging(string value);
    partial void OndrzavaChanged();
    partial void OnregionChanging(string value);
    partial void OnregionChanged();
    #endregion
		
		public Mesto()
		{
			this._Hotels = new EntitySet<Hotel>(new Action<Hotel>(this.attach_Hotels), new Action<Hotel>(this.detach_Hotels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMesta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMesta
		{
			get
			{
				return this._IDMesta;
			}
			set
			{
				if ((this._IDMesta != value))
				{
					this.OnIDMestaChanging(value);
					this.SendPropertyChanging();
					this._IDMesta = value;
					this.SendPropertyChanged("IDMesta");
					this.OnIDMestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazivMesta", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nazivMesta
		{
			get
			{
				return this._nazivMesta;
			}
			set
			{
				if ((this._nazivMesta != value))
				{
					this.OnnazivMestaChanging(value);
					this.SendPropertyChanging();
					this._nazivMesta = value;
					this.SendPropertyChanged("nazivMesta");
					this.OnnazivMestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drzava", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string drzava
		{
			get
			{
				return this._drzava;
			}
			set
			{
				if ((this._drzava != value))
				{
					this.OndrzavaChanging(value);
					this.SendPropertyChanging();
					this._drzava = value;
					this.SendPropertyChanged("drzava");
					this.OndrzavaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this.OnregionChanging(value);
					this.SendPropertyChanging();
					this._region = value;
					this.SendPropertyChanged("region");
					this.OnregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mesto_Hotel", Storage="_Hotels", ThisKey="IDMesta", OtherKey="IDMesta")]
		public EntitySet<Hotel> Hotels
		{
			get
			{
				return this._Hotels;
			}
			set
			{
				this._Hotels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hotels(Hotel entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = this;
		}
		
		private void detach_Hotels(Hotel entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Putnik")]
	public partial class Putnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPutnika;
		
		private string _ime;
		
		private string _prezime;
		
		private string _adresa;
		
		private string _telefon;
		
		private string _Email;
		
		private string _brojKartice;
		
		private EntitySet<Racun> _Racuns;
		
		private EntitySet<Rezervacija> _Rezervacijas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPutnikaChanging(int value);
    partial void OnIDPutnikaChanged();
    partial void OnimeChanging(string value);
    partial void OnimeChanged();
    partial void OnprezimeChanging(string value);
    partial void OnprezimeChanged();
    partial void OnadresaChanging(string value);
    partial void OnadresaChanged();
    partial void OntelefonChanging(string value);
    partial void OntelefonChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnbrojKarticeChanging(string value);
    partial void OnbrojKarticeChanged();
    #endregion
		
		public Putnik()
		{
			this._Racuns = new EntitySet<Racun>(new Action<Racun>(this.attach_Racuns), new Action<Racun>(this.detach_Racuns));
			this._Rezervacijas = new EntitySet<Rezervacija>(new Action<Rezervacija>(this.attach_Rezervacijas), new Action<Rezervacija>(this.detach_Rezervacijas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPutnika", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPutnika
		{
			get
			{
				return this._IDPutnika;
			}
			set
			{
				if ((this._IDPutnika != value))
				{
					this.OnIDPutnikaChanging(value);
					this.SendPropertyChanging();
					this._IDPutnika = value;
					this.SendPropertyChanged("IDPutnika");
					this.OnIDPutnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ime
		{
			get
			{
				return this._ime;
			}
			set
			{
				if ((this._ime != value))
				{
					this.OnimeChanging(value);
					this.SendPropertyChanging();
					this._ime = value;
					this.SendPropertyChanged("ime");
					this.OnimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string prezime
		{
			get
			{
				return this._prezime;
			}
			set
			{
				if ((this._prezime != value))
				{
					this.OnprezimeChanging(value);
					this.SendPropertyChanging();
					this._prezime = value;
					this.SendPropertyChanged("prezime");
					this.OnprezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresa", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string adresa
		{
			get
			{
				return this._adresa;
			}
			set
			{
				if ((this._adresa != value))
				{
					this.OnadresaChanging(value);
					this.SendPropertyChanging();
					this._adresa = value;
					this.SendPropertyChanged("adresa");
					this.OnadresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon", DbType="NVarChar(50)")]
		public string telefon
		{
			get
			{
				return this._telefon;
			}
			set
			{
				if ((this._telefon != value))
				{
					this.OntelefonChanging(value);
					this.SendPropertyChanging();
					this._telefon = value;
					this.SendPropertyChanged("telefon");
					this.OntelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brojKartice", DbType="NVarChar(MAX)")]
		public string brojKartice
		{
			get
			{
				return this._brojKartice;
			}
			set
			{
				if ((this._brojKartice != value))
				{
					this.OnbrojKarticeChanging(value);
					this.SendPropertyChanging();
					this._brojKartice = value;
					this.SendPropertyChanged("brojKartice");
					this.OnbrojKarticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Putnik_Racun", Storage="_Racuns", ThisKey="IDPutnika", OtherKey="IDPutnika")]
		public EntitySet<Racun> Racuns
		{
			get
			{
				return this._Racuns;
			}
			set
			{
				this._Racuns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Putnik_Rezervacija", Storage="_Rezervacijas", ThisKey="IDPutnika", OtherKey="IDPutnika")]
		public EntitySet<Rezervacija> Rezervacijas
		{
			get
			{
				return this._Rezervacijas;
			}
			set
			{
				this._Rezervacijas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Racuns(Racun entity)
		{
			this.SendPropertyChanging();
			entity.Putnik = this;
		}
		
		private void detach_Racuns(Racun entity)
		{
			this.SendPropertyChanging();
			entity.Putnik = null;
		}
		
		private void attach_Rezervacijas(Rezervacija entity)
		{
			this.SendPropertyChanging();
			entity.Putnik = this;
		}
		
		private void detach_Rezervacijas(Rezervacija entity)
		{
			this.SendPropertyChanging();
			entity.Putnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Racun")]
	public partial class Racun : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRacuna;
		
		private System.DateTime _datum;
		
		private double _iznos;
		
		private System.Nullable<bool> _storniran;
		
		private System.Nullable<int> _IDStavke;
		
		private System.Nullable<int> _IDSobe;
		
		private System.Nullable<int> _IDPutnika;
		
		private EntityRef<Putnik> _Putnik;
		
		private EntityRef<StavkaRacuna> _StavkaRacuna;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRacunaChanging(int value);
    partial void OnIDRacunaChanged();
    partial void OndatumChanging(System.DateTime value);
    partial void OndatumChanged();
    partial void OniznosChanging(double value);
    partial void OniznosChanged();
    partial void OnstorniranChanging(System.Nullable<bool> value);
    partial void OnstorniranChanged();
    partial void OnIDStavkeChanging(System.Nullable<int> value);
    partial void OnIDStavkeChanged();
    partial void OnIDSobeChanging(System.Nullable<int> value);
    partial void OnIDSobeChanged();
    partial void OnIDPutnikaChanging(System.Nullable<int> value);
    partial void OnIDPutnikaChanged();
    #endregion
		
		public Racun()
		{
			this._Putnik = default(EntityRef<Putnik>);
			this._StavkaRacuna = default(EntityRef<StavkaRacuna>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRacuna", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRacuna
		{
			get
			{
				return this._IDRacuna;
			}
			set
			{
				if ((this._IDRacuna != value))
				{
					this.OnIDRacunaChanging(value);
					this.SendPropertyChanging();
					this._IDRacuna = value;
					this.SendPropertyChanged("IDRacuna");
					this.OnIDRacunaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datum", DbType="DateTime NOT NULL")]
		public System.DateTime datum
		{
			get
			{
				return this._datum;
			}
			set
			{
				if ((this._datum != value))
				{
					this.OndatumChanging(value);
					this.SendPropertyChanging();
					this._datum = value;
					this.SendPropertyChanged("datum");
					this.OndatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iznos", DbType="Float NOT NULL")]
		public double iznos
		{
			get
			{
				return this._iznos;
			}
			set
			{
				if ((this._iznos != value))
				{
					this.OniznosChanging(value);
					this.SendPropertyChanging();
					this._iznos = value;
					this.SendPropertyChanged("iznos");
					this.OniznosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_storniran", DbType="Bit")]
		public System.Nullable<bool> storniran
		{
			get
			{
				return this._storniran;
			}
			set
			{
				if ((this._storniran != value))
				{
					this.OnstorniranChanging(value);
					this.SendPropertyChanging();
					this._storniran = value;
					this.SendPropertyChanged("storniran");
					this.OnstorniranChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStavke", DbType="Int")]
		public System.Nullable<int> IDStavke
		{
			get
			{
				return this._IDStavke;
			}
			set
			{
				if ((this._IDStavke != value))
				{
					if (this._StavkaRacuna.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStavkeChanging(value);
					this.SendPropertyChanging();
					this._IDStavke = value;
					this.SendPropertyChanged("IDStavke");
					this.OnIDStavkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSobe", DbType="Int")]
		public System.Nullable<int> IDSobe
		{
			get
			{
				return this._IDSobe;
			}
			set
			{
				if ((this._IDSobe != value))
				{
					this.OnIDSobeChanging(value);
					this.SendPropertyChanging();
					this._IDSobe = value;
					this.SendPropertyChanged("IDSobe");
					this.OnIDSobeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPutnika", DbType="Int")]
		public System.Nullable<int> IDPutnika
		{
			get
			{
				return this._IDPutnika;
			}
			set
			{
				if ((this._IDPutnika != value))
				{
					if (this._Putnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPutnikaChanging(value);
					this.SendPropertyChanging();
					this._IDPutnika = value;
					this.SendPropertyChanged("IDPutnika");
					this.OnIDPutnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Putnik_Racun", Storage="_Putnik", ThisKey="IDPutnika", OtherKey="IDPutnika", IsForeignKey=true)]
		public Putnik Putnik
		{
			get
			{
				return this._Putnik.Entity;
			}
			set
			{
				Putnik previousValue = this._Putnik.Entity;
				if (((previousValue != value) 
							|| (this._Putnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Putnik.Entity = null;
						previousValue.Racuns.Remove(this);
					}
					this._Putnik.Entity = value;
					if ((value != null))
					{
						value.Racuns.Add(this);
						this._IDPutnika = value.IDPutnika;
					}
					else
					{
						this._IDPutnika = default(Nullable<int>);
					}
					this.SendPropertyChanged("Putnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StavkaRacuna_Racun", Storage="_StavkaRacuna", ThisKey="IDStavke", OtherKey="IDStavke", IsForeignKey=true)]
		public StavkaRacuna StavkaRacuna
		{
			get
			{
				return this._StavkaRacuna.Entity;
			}
			set
			{
				StavkaRacuna previousValue = this._StavkaRacuna.Entity;
				if (((previousValue != value) 
							|| (this._StavkaRacuna.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StavkaRacuna.Entity = null;
						previousValue.Racuns.Remove(this);
					}
					this._StavkaRacuna.Entity = value;
					if ((value != null))
					{
						value.Racuns.Add(this);
						this._IDStavke = value.IDStavke;
					}
					else
					{
						this._IDStavke = default(Nullable<int>);
					}
					this.SendPropertyChanged("StavkaRacuna");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezervacija")]
	public partial class Rezervacija : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRezervacije;
		
		private System.DateTime _datumRezervacije;
		
		private System.DateTime _datumOd;
		
		private System.DateTime _datumDo;
		
		private System.Nullable<bool> _otkazana;
		
		private System.Nullable<int> _IDPutnika;
		
		private System.Nullable<int> _IDHotela;
		
		private EntityRef<Hotel> _Hotel;
		
		private EntityRef<Putnik> _Putnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRezervacijeChanging(int value);
    partial void OnIDRezervacijeChanged();
    partial void OndatumRezervacijeChanging(System.DateTime value);
    partial void OndatumRezervacijeChanged();
    partial void OndatumOdChanging(System.DateTime value);
    partial void OndatumOdChanged();
    partial void OndatumDoChanging(System.DateTime value);
    partial void OndatumDoChanged();
    partial void OnotkazanaChanging(System.Nullable<bool> value);
    partial void OnotkazanaChanged();
    partial void OnIDPutnikaChanging(System.Nullable<int> value);
    partial void OnIDPutnikaChanged();
    partial void OnIDHotelaChanging(System.Nullable<int> value);
    partial void OnIDHotelaChanged();
    #endregion
		
		public Rezervacija()
		{
			this._Hotel = default(EntityRef<Hotel>);
			this._Putnik = default(EntityRef<Putnik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRezervacije", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRezervacije
		{
			get
			{
				return this._IDRezervacije;
			}
			set
			{
				if ((this._IDRezervacije != value))
				{
					this.OnIDRezervacijeChanging(value);
					this.SendPropertyChanging();
					this._IDRezervacije = value;
					this.SendPropertyChanged("IDRezervacije");
					this.OnIDRezervacijeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datumRezervacije", DbType="DateTime NOT NULL")]
		public System.DateTime datumRezervacije
		{
			get
			{
				return this._datumRezervacije;
			}
			set
			{
				if ((this._datumRezervacije != value))
				{
					this.OndatumRezervacijeChanging(value);
					this.SendPropertyChanging();
					this._datumRezervacije = value;
					this.SendPropertyChanged("datumRezervacije");
					this.OndatumRezervacijeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datumOd", DbType="DateTime NOT NULL")]
		public System.DateTime datumOd
		{
			get
			{
				return this._datumOd;
			}
			set
			{
				if ((this._datumOd != value))
				{
					this.OndatumOdChanging(value);
					this.SendPropertyChanging();
					this._datumOd = value;
					this.SendPropertyChanged("datumOd");
					this.OndatumOdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datumDo", DbType="DateTime NOT NULL")]
		public System.DateTime datumDo
		{
			get
			{
				return this._datumDo;
			}
			set
			{
				if ((this._datumDo != value))
				{
					this.OndatumDoChanging(value);
					this.SendPropertyChanging();
					this._datumDo = value;
					this.SendPropertyChanged("datumDo");
					this.OndatumDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otkazana", DbType="Bit")]
		public System.Nullable<bool> otkazana
		{
			get
			{
				return this._otkazana;
			}
			set
			{
				if ((this._otkazana != value))
				{
					this.OnotkazanaChanging(value);
					this.SendPropertyChanging();
					this._otkazana = value;
					this.SendPropertyChanged("otkazana");
					this.OnotkazanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPutnika", DbType="Int")]
		public System.Nullable<int> IDPutnika
		{
			get
			{
				return this._IDPutnika;
			}
			set
			{
				if ((this._IDPutnika != value))
				{
					if (this._Putnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPutnikaChanging(value);
					this.SendPropertyChanging();
					this._IDPutnika = value;
					this.SendPropertyChanged("IDPutnika");
					this.OnIDPutnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHotela", DbType="Int")]
		public System.Nullable<int> IDHotela
		{
			get
			{
				return this._IDHotela;
			}
			set
			{
				if ((this._IDHotela != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHotelaChanging(value);
					this.SendPropertyChanging();
					this._IDHotela = value;
					this.SendPropertyChanged("IDHotela");
					this.OnIDHotelaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Rezervacija", Storage="_Hotel", ThisKey="IDHotela", OtherKey="IDHotela", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.Rezervacijas.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.Rezervacijas.Add(this);
						this._IDHotela = value.IDHotela;
					}
					else
					{
						this._IDHotela = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Putnik_Rezervacija", Storage="_Putnik", ThisKey="IDPutnika", OtherKey="IDPutnika", IsForeignKey=true)]
		public Putnik Putnik
		{
			get
			{
				return this._Putnik.Entity;
			}
			set
			{
				Putnik previousValue = this._Putnik.Entity;
				if (((previousValue != value) 
							|| (this._Putnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Putnik.Entity = null;
						previousValue.Rezervacijas.Remove(this);
					}
					this._Putnik.Entity = value;
					if ((value != null))
					{
						value.Rezervacijas.Add(this);
						this._IDPutnika = value.IDPutnika;
					}
					else
					{
						this._IDPutnika = default(Nullable<int>);
					}
					this.SendPropertyChanged("Putnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Soba")]
	public partial class Soba : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSobe;
		
		private string _tipSobe;
		
		private int _brKreveta;
		
		private bool _slobodna;
		
		private System.Nullable<double> _cena;
		
		private System.Nullable<int> _IDHotela;
		
		private EntityRef<Hotel> _Hotel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSobeChanging(int value);
    partial void OnIDSobeChanged();
    partial void OntipSobeChanging(string value);
    partial void OntipSobeChanged();
    partial void OnbrKrevetaChanging(int value);
    partial void OnbrKrevetaChanged();
    partial void OnslobodnaChanging(bool value);
    partial void OnslobodnaChanged();
    partial void OncenaChanging(System.Nullable<double> value);
    partial void OncenaChanged();
    partial void OnIDHotelaChanging(System.Nullable<int> value);
    partial void OnIDHotelaChanged();
    #endregion
		
		public Soba()
		{
			this._Hotel = default(EntityRef<Hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSobe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSobe
		{
			get
			{
				return this._IDSobe;
			}
			set
			{
				if ((this._IDSobe != value))
				{
					this.OnIDSobeChanging(value);
					this.SendPropertyChanging();
					this._IDSobe = value;
					this.SendPropertyChanged("IDSobe");
					this.OnIDSobeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipSobe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tipSobe
		{
			get
			{
				return this._tipSobe;
			}
			set
			{
				if ((this._tipSobe != value))
				{
					this.OntipSobeChanging(value);
					this.SendPropertyChanging();
					this._tipSobe = value;
					this.SendPropertyChanged("tipSobe");
					this.OntipSobeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brKreveta", DbType="Int NOT NULL")]
		public int brKreveta
		{
			get
			{
				return this._brKreveta;
			}
			set
			{
				if ((this._brKreveta != value))
				{
					this.OnbrKrevetaChanging(value);
					this.SendPropertyChanging();
					this._brKreveta = value;
					this.SendPropertyChanged("brKreveta");
					this.OnbrKrevetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slobodna", DbType="Bit NOT NULL")]
		public bool slobodna
		{
			get
			{
				return this._slobodna;
			}
			set
			{
				if ((this._slobodna != value))
				{
					this.OnslobodnaChanging(value);
					this.SendPropertyChanging();
					this._slobodna = value;
					this.SendPropertyChanged("slobodna");
					this.OnslobodnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Float")]
		public System.Nullable<double> cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this.OncenaChanging(value);
					this.SendPropertyChanging();
					this._cena = value;
					this.SendPropertyChanged("cena");
					this.OncenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHotela", DbType="Int")]
		public System.Nullable<int> IDHotela
		{
			get
			{
				return this._IDHotela;
			}
			set
			{
				if ((this._IDHotela != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHotelaChanging(value);
					this.SendPropertyChanging();
					this._IDHotela = value;
					this.SendPropertyChanged("IDHotela");
					this.OnIDHotelaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Soba", Storage="_Hotel", ThisKey="IDHotela", OtherKey="IDHotela", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.Sobas.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.Sobas.Add(this);
						this._IDHotela = value.IDHotela;
					}
					else
					{
						this._IDHotela = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
